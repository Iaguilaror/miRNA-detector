< ../config.mk

all:QV: bin/targets
	bin/targets | xargs mk

results/preprocessing_summary:Q: data/samples.stats
	mkdir -p results/
	mkdir -p tmp/
	echo "[DEBUGGING]doing $target"
	echo "SRR_id	sra_file_size.MB	sra_download_time.SEC	fastq_gz_size.MB	fastq-dump_time.SEC	fastq_slice_size.READS	adapter_percentage_in_slice	original_reads	cutadapt_reads	uncutadapt_reads	adapter_percentage_in_total_reads	cutadapt_time.SEC	trimmed_reads	untrimmed_reads	trimming_time.SEC	unminimized_reads	minimized_reads	minimizing_time.SEC	fasta_conversion_time.SEC	intermediate_files_size.MB	filtered_fasta_size.MB" > $target.build
	grep "^SRR" $SRR_FILE | cut -f1 > tmp/SRRid.list
	while read p
	do
		SRR_id=$p
		SRA_SIZE="FAILED_DOWNLOAD"
		SRA_DOWNLOAD_TIME="NA"
		FASTQ_GZ_SIZE="NA"
		FASTQ_DUMP_TIME="NA"
		FASTQ_SLICE_SIZE="NA"
		ADAPTER_IN_SLICE="NA"
		ORIGINAL_LINES="NA"
		CUTADAPT_LINES="NA"
		UNCUTADAPT_LINES="NA"
		ADAPTER_IN_ORIGINAL="NA"
		CUTADAPT_TIME="NA"
		TRIMMED_LINES="NA"
		UNTRIMMED_LINES="NA"
		TRIMMING_TIME="NA"
		UNMINIMIZED_LINES="NA"
		MINIMIZED_LINES="NA"
		MINIMIZING_TIME="NA"
		FASTA_CONVERSION_TIME="NA"
		INTERMEDIATES_SIZE="NA"
		FILTERED_FASTA_SIZE="NA"
		echo "[DEBUGGING]summarizing preprocessing for $SRR_id"
		if [ -f ../001/results/$SRR_id.fastq.gz.report ]; then
		SRA_SIZE=$(grep "$SRR_id" $prereq | cut -f2)
		SRA_DOWNLOAD_TIME=$(grep "Download time" ../001/tmp/$SRR_id.sra.report | cut -f2)
		FASTQ_GZ_SIZE=$(grep "Fastq size" ../001/results/$SRR_id.fastq.gz.report | cut -f2)
		FASTQ_DUMP_TIME=$(grep "Fastq-dump time" ../001/results/$SRR_id.fastq.gz.report | cut -f2)
				if [ -f ../002_half_adapter/tmp/cut_survey/$SRR_id.report ]; then
				echo "[DEBUGGING]checking into cut_survey report"
				ADAPTER_IN_SLICE=$(grep "Reads with adapters:" ../002_half_adapter/tmp/cut_survey/$SRR_id.report | cut -d"(" -f2 | sed s/%.\$//g )
				FASTQ_SLICE_SIZE=$(($SURVEY_LINES/ 4))
				fi
				if [ -f ../002_half_adapter/tmp/cutadapt/$SRR_id.*.report ]; then
				echo "[DEBUGGING]checking into cutadapt report"
				ORIGINAL_LINES=$(grep -w "Total reads processed:" ../002_half_adapter/tmp/cutadapt/$SRR_id.cutadapt.fastq.gz.report | tr -s " " | cut -d " " -f4- | tr -d ",")
				CUTADAPT_LINES=$(grep -w "Reads with adapters:" ../002_half_adapter/tmp/cutadapt/$SRR_id.cutadapt.fastq.gz.report | tr -s " " | cut -d " " -f4 | tr -d ",")
					if [ "$CUTADAPT_LINES" != "NA" ]; then	##avoid mistakes when using NA to calculate lines
					ADAPTER_IN_ORIGINAL=$(grep "Reads with adapters:" ../002_half_adapter/tmp/cutadapt/$SRR_id.cutadapt.fastq.gz.report | cut -d"(" -f2 | sed s/%.\$//g )
					UNCUTADAPT_LINES=$(( $ORIGINAL_LINES - $CUTADAPT_LINES))
					fi
				CUTADAPT_TIME=$(grep "Process time:" ../002_half_adapter/tmp/cutadapt/$SRR_id.cutadapt.fastq.gz.report | cut -f2)
				fi
				if [ -f ../002_half_adapter/tmp/trimmomatic/$SRR_id.*.report ]; then
				echo "[DEBUGGING]checking into trimmomatic report"
				TRIMMING_TIME=$(grep "Processing time:" ../002_half_adapter/tmp/trimmomatic/$SRR_id.trimmo.fastq.gz.report | cut -f2)
				fi
				if [ -f ../002_half_adapter/tmp/minimized/$SRR_id.*.report ]; then
				echo "[DEBUGGING]checking into minimizing report"
				TRIMMED_LINES=$(grep -w "Total reads processed:" ../002_half_adapter/tmp/minimized/$SRR_id.minimized.fastqc.report | tr -s " " | cut -d " " -f4 | tr -d ",")
					if [ "$CUTADAPT_LINES" != "NA" ]; then
						UNTRIMMED_LINES=$(( $CUTADAPT_LINES - $TRIMMED_LINES ))
					else
						UNTRIMMED_LINES=$(( $ORIGINAL_LINES - $TRIMMED_LINES ))
					fi
				UNMINIMIZED_LINES=$(grep -w "Reads that were too long:" ../002_half_adapter/tmp/minimized/$SRR_id.minimized.fastqc.report | tr -s " " | cut -d " " -f6 | tr -d ",")
				MINIMIZED_LINES=$(( $TRIMMED_LINES - $UNMINIMIZED_LINES ))
				MINIMIZING_TIME=$(grep "Process time:" ../002_half_adapter/tmp/minimized/$SRR_id.minimized.fastqc.report | cut -f2)
				fi
				if [ -f ../002_half_adapter/results/$SRR_id.filtered.fasta ]; then
				echo "[DEBUGGING]checking into filtering fasta report"
				INTERMEDIATES_SIZE=$(grep "Intermediate files size" ../002_half_adapter/results/$SRR_id.filtered.fasta.report  | cut -f2)
				FILTERED_FASTA_SIZE=$(grep "Filtered fasta size" ../002_half_adapter/results/$SRR_id.filtered.fasta.report  | cut -f2)
				FASTA_CONVERSION_TIME=$(grep "Process time:" ../002_half_adapter/results/$SRR_id.filtered.fasta.report  | cut -f2)
				fi
		else
			echo "[WARNING] $SRR_id.sra was not downloaded succesfully. Skipping preprocessing summarization"
		fi
		echo "$SRR_id	$SRA_SIZE	$SRA_DOWNLOAD_TIME	$FASTQ_GZ_SIZE	$FASTQ_DUMP_TIME	$FASTQ_SLICE_SIZE	$ADAPTER_IN_SLICE	$ORIGINAL_LINES	$CUTADAPT_LINES	$UNCUTADAPT_LINES	$ADAPTER_IN_ORIGINAL	$CUTADAPT_TIME	$TRIMMED_LINES	$UNTRIMMED_LINES	$TRIMMING_TIME	$UNMINIMIZED_LINES	$MINIMIZED_LINES	$MINIMIZING_TIME	$FASTA_CONVERSION_TIME	$INTERMEDIATES_SIZE	$FILTERED_FASTA_SIZE" >> $target.build
	done < tmp/SRRid.list &&
	mv $target.build $target.tsv

status_report:QV:
	DATE=`date +%Yy-%mm-%dd.%Hh.%Mm.%Ss`
	echo "[DEBUGGING] Generating updated status report for $DATE"
	mkdir -p tmp/status_reports
	echo "==STATUS REPORT==" > tmp/status_reports/$DATE.report.build
	REQUESTED_SRR=$(grep "^SRR" $SRR_FILE | wc -l)
	DOWNLOADED_SRA=$(ls ../001/tmp/*.sra.report | wc -l)
	FASTQ_GZ_FILES=$(ls ../001/results/*.fastq.gz | wc -l)
	SLICE_FILES=$(ls ../002_half_adapter/tmp/slices/*.fastq.gz | wc -l)
	CUT_SURVEY_FILES=$(ls ../002_half_adapter/tmp/cut_survey/*.report | wc -l)
	CUTADAPT_FILES=$(ls ../002_half_adapter/tmp/cutadapt/*.report | wc -l)
	TRIMMOMATIC_FILES=$(ls ../002_half_adapter/tmp/trimmomatic/*.report | wc -l)
	MINIMIZED_FILES=$(ls ../002_half_adapter/tmp/minimized/*.report | wc -l)
	FILTERED_FASTA_FILES=$(ls ../002_half_adapter/results/*.filtered.fasta | wc -l)
	echo "$REQUESTED_SRR requested SRA in $SRR_FILE" >> tmp/status_reports/$DATE.report.build
	echo "$DOWNLOADED_SRA .sra FILES DOWNLOADED " >> tmp/status_reports/$DATE.report.build
	echo "$FASTQ_GZ_FILES .fastq.gz FILES GENERATED" >> tmp/status_reports/$DATE.report.build
	echo "$SLICE_FILES .fastq.gz sampled for adapter content (SLICES)" >> tmp/status_reports/$DATE.report.build
	echo "$CUT_SURVEY_FILES slices surveyed for adapter content (CUT_SURVEY)" >> tmp/status_reports/$DATE.report.build
	echo "$CUTADAPT_FILES .fastq.gz with removed adapters by CUTADAPT" >> tmp/status_reports/$DATE.report.build
	echo "$TRIMMOMATIC_FILES cutadapted files trimmed with TRIMMOMATIC" >> tmp/status_reports/$DATE.report.build
	echo "$MINIMIZED_FILES trimmed files minimized by min and max length (MINIMIZED module)" >> tmp/status_reports/$DATE.report.build
	echo "$FILTERED_FASTA_FILES/$REQUESTED_SRR fasta files completed (passing all filters)" >> tmp/status_reports/$DATE.report.build \
	&& mv tmp/status_reports/$DATE.report.build tmp/status_reports/$DATE.report
